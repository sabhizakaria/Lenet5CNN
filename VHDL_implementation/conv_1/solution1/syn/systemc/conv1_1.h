// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv1_1_HH_
#define _conv1_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct conv1_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<7> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<12> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    conv1_1(sc_module_name name);
    SC_HAS_PROCESS(conv1_1);

    ~conv1_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > nb_filtre_fu_180_p2;
    sc_signal< sc_lv<3> > nb_filtre_reg_443;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > add_ln71_2_fu_206_p2;
    sc_signal< sc_lv<6> > add_ln71_2_reg_448;
    sc_signal< sc_lv<1> > icmp_ln64_fu_174_p2;
    sc_signal< sc_lv<10> > sext_ln75_fu_230_p1;
    sc_signal< sc_lv<10> > sext_ln75_reg_453;
    sc_signal< sc_lv<5> > i_fu_240_p2;
    sc_signal< sc_lv<5> > i_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > sub_ln75_1_fu_279_p2;
    sc_signal< sc_lv<13> > sub_ln75_1_reg_466;
    sc_signal< sc_lv<1> > icmp_ln65_fu_234_p2;
    sc_signal< sc_lv<5> > j_fu_291_p2;
    sc_signal< sc_lv<5> > j_reg_474;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > k_fu_307_p2;
    sc_signal< sc_lv<3> > k_reg_482;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > add_ln71_fu_313_p2;
    sc_signal< sc_lv<5> > add_ln71_reg_487;
    sc_signal< sc_lv<1> > icmp_ln68_fu_301_p2;
    sc_signal< sc_lv<8> > add_ln71_4_fu_340_p2;
    sc_signal< sc_lv<8> > add_ln71_4_reg_492;
    sc_signal< sc_lv<3> > l_fu_393_p2;
    sc_signal< sc_lv<3> > l_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln69_fu_387_p2;
    sc_signal< sc_lv<32> > input_load_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > kernel_load_reg_520;
    sc_signal< sc_lv<32> > mul_ln71_fu_431_p2;
    sc_signal< sc_lv<32> > mul_ln71_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > res_fu_435_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > nb_filtre_0_reg_93;
    sc_signal< sc_lv<5> > i_0_reg_104;
    sc_signal< sc_lv<1> > icmp_ln66_fu_285_p2;
    sc_signal< sc_lv<5> > j_0_reg_116;
    sc_signal< sc_lv<3> > k_0_reg_128;
    sc_signal< sc_lv<32> > x_assign_reg_139;
    sc_signal< sc_lv<3> > l_0_reg_151;
    sc_signal< sc_lv<32> > res_4_reg_162;
    sc_signal< sc_lv<64> > zext_ln75_3_fu_378_p1;
    sc_signal< sc_lv<64> > zext_ln71_3_fu_412_p1;
    sc_signal< sc_lv<64> > zext_ln71_7_fu_426_p1;
    sc_signal< sc_lv<5> > tmp_fu_190_p3;
    sc_signal< sc_lv<6> > zext_ln71_fu_186_p1;
    sc_signal< sc_lv<6> > zext_ln71_1_fu_198_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_212_p3;
    sc_signal< sc_lv<9> > zext_ln75_fu_220_p1;
    sc_signal< sc_lv<9> > zext_ln71_2_fu_202_p1;
    sc_signal< sc_lv<9> > sub_ln75_fu_224_p2;
    sc_signal< sc_lv<10> > zext_ln75_1_fu_246_p1;
    sc_signal< sc_lv<10> > add_ln75_fu_250_p2;
    sc_signal< sc_lv<8> > trunc_ln75_fu_255_p1;
    sc_signal< sc_lv<12> > tmp_2_fu_267_p3;
    sc_signal< sc_lv<13> > p_shl3_cast_fu_259_p3;
    sc_signal< sc_lv<13> > sext_ln75_1_fu_275_p1;
    sc_signal< sc_lv<5> > zext_ln68_fu_297_p1;
    sc_signal< sc_lv<6> > zext_ln71_4_fu_319_p1;
    sc_signal< sc_lv<6> > add_ln71_3_fu_323_p2;
    sc_signal< sc_lv<8> > p_shl5_cast_fu_332_p3;
    sc_signal< sc_lv<8> > zext_ln71_5_fu_328_p1;
    sc_signal< sc_lv<1> > icmp_ln13_fu_350_p2;
    sc_signal< sc_lv<31> > trunc_ln68_fu_346_p1;
    sc_signal< sc_lv<31> > return_value_fu_356_p3;
    sc_signal< sc_lv<13> > zext_ln75_2_fu_369_p1;
    sc_signal< sc_lv<13> > add_ln75_1_fu_373_p2;
    sc_signal< sc_lv<5> > zext_ln69_fu_383_p1;
    sc_signal< sc_lv<5> > add_ln71_1_fu_399_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_405_p3;
    sc_signal< sc_lv<8> > zext_ln71_6_fu_417_p1;
    sc_signal< sc_lv<8> > add_ln71_5_fu_421_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<31> ap_const_lv31_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln71_1_fu_399_p2();
    void thread_add_ln71_2_fu_206_p2();
    void thread_add_ln71_3_fu_323_p2();
    void thread_add_ln71_4_fu_340_p2();
    void thread_add_ln71_5_fu_421_p2();
    void thread_add_ln71_fu_313_p2();
    void thread_add_ln75_1_fu_373_p2();
    void thread_add_ln75_fu_250_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_240_p2();
    void thread_icmp_ln13_fu_350_p2();
    void thread_icmp_ln64_fu_174_p2();
    void thread_icmp_ln65_fu_234_p2();
    void thread_icmp_ln66_fu_285_p2();
    void thread_icmp_ln68_fu_301_p2();
    void thread_icmp_ln69_fu_387_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_291_p2();
    void thread_k_fu_307_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_l_fu_393_p2();
    void thread_mul_ln71_fu_431_p2();
    void thread_nb_filtre_fu_180_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_259_p3();
    void thread_p_shl5_cast_fu_332_p3();
    void thread_res_fu_435_p2();
    void thread_return_value_fu_356_p3();
    void thread_sext_ln75_1_fu_275_p1();
    void thread_sext_ln75_fu_230_p1();
    void thread_sub_ln75_1_fu_279_p2();
    void thread_sub_ln75_fu_224_p2();
    void thread_tmp_1_fu_212_p3();
    void thread_tmp_2_fu_267_p3();
    void thread_tmp_6_fu_405_p3();
    void thread_tmp_fu_190_p3();
    void thread_trunc_ln68_fu_346_p1();
    void thread_trunc_ln75_fu_255_p1();
    void thread_zext_ln68_fu_297_p1();
    void thread_zext_ln69_fu_383_p1();
    void thread_zext_ln71_1_fu_198_p1();
    void thread_zext_ln71_2_fu_202_p1();
    void thread_zext_ln71_3_fu_412_p1();
    void thread_zext_ln71_4_fu_319_p1();
    void thread_zext_ln71_5_fu_328_p1();
    void thread_zext_ln71_6_fu_417_p1();
    void thread_zext_ln71_7_fu_426_p1();
    void thread_zext_ln71_fu_186_p1();
    void thread_zext_ln75_1_fu_246_p1();
    void thread_zext_ln75_2_fu_369_p1();
    void thread_zext_ln75_3_fu_378_p1();
    void thread_zext_ln75_fu_220_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
