

================================================================
== Vivado HLS Report for 'conv1_1'
================================================================
* Date:           Tue Jun  9 14:14:04 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        conv_1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.050 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   351465|   351465| 3.515 ms | 3.515 ms |  351465|  351465|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |   351464|   351464|     87866|          -|          -|     4|    no    |
        | + Loop 1.1              |    87864|    87864|      3138|          -|          -|    28|    no    |
        |  ++ Loop 1.1.1          |     3136|     3136|       112|          -|          -|    28|    no    |
        |   +++ Loop 1.1.1.1      |      110|      110|        22|          -|          -|     5|    no    |
        |    ++++ Loop 1.1.1.1.1  |       20|       20|         4|          -|          -|     5|    no    |
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 8 
8 --> 9 
9 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %input_r) nounwind, !map !30"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %kernel) nounwind, !map !36"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3136 x i32]* %output_r) nounwind, !map !43"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @conv1_1_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "br label %.loopexit" [../C_implementation/lenet5.c:64]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.30>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%nb_filtre_0 = phi i3 [ 0, %0 ], [ %nb_filtre, %.loopexit.loopexit ]"   --->   Operation 15 'phi' 'nb_filtre_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.98ns)   --->   "%icmp_ln64 = icmp eq i3 %nb_filtre_0, -4" [../C_implementation/lenet5.c:64]   --->   Operation 16 'icmp' 'icmp_ln64' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.76ns)   --->   "%nb_filtre = add i3 %nb_filtre_0, 1" [../C_implementation/lenet5.c:64]   --->   Operation 18 'add' 'nb_filtre' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln64, label %3, label %.preheader3.preheader" [../C_implementation/lenet5.c:64]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i3 %nb_filtre_0 to i6" [../C_implementation/lenet5.c:71]   --->   Operation 20 'zext' 'zext_ln71' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %nb_filtre_0, i2 0)" [../C_implementation/lenet5.c:71]   --->   Operation 21 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln71_1 = zext i5 %tmp to i6" [../C_implementation/lenet5.c:71]   --->   Operation 22 'zext' 'zext_ln71_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln71_2 = zext i5 %tmp to i9" [../C_implementation/lenet5.c:71]   --->   Operation 23 'zext' 'zext_ln71_2' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.02ns)   --->   "%add_ln71_2 = add i6 %zext_ln71, %zext_ln71_1" [../C_implementation/lenet5.c:71]   --->   Operation 24 'add' 'add_ln71_2' <Predicate = (!icmp_ln64)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %nb_filtre_0, i5 0)" [../C_implementation/lenet5.c:75]   --->   Operation 25 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i8 %tmp_1 to i9" [../C_implementation/lenet5.c:75]   --->   Operation 26 'zext' 'zext_ln75' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.30ns)   --->   "%sub_ln75 = sub i9 %zext_ln75, %zext_ln71_2" [../C_implementation/lenet5.c:75]   --->   Operation 27 'sub' 'sub_ln75' <Predicate = (!icmp_ln64)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%sext_ln75 = sext i9 %sub_ln75 to i10" [../C_implementation/lenet5.c:75]   --->   Operation 28 'sext' 'sext_ln75' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.46ns)   --->   "br label %.preheader3" [../C_implementation/lenet5.c:65]   --->   Operation 29 'br' <Predicate = (!icmp_ln64)> <Delay = 0.46>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "ret void" [../C_implementation/lenet5.c:81]   --->   Operation 30 'ret' <Predicate = (icmp_ln64)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.89>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %.preheader3.preheader ], [ %i, %.preheader3.loopexit ]"   --->   Operation 31 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.97ns)   --->   "%icmp_ln65 = icmp eq i5 %i_0, -4" [../C_implementation/lenet5.c:65]   --->   Operation 32 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28) nounwind"   --->   Operation 33 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (1.02ns)   --->   "%i = add i5 %i_0, 1" [../C_implementation/lenet5.c:65]   --->   Operation 34 'add' 'i' <Predicate = true> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %icmp_ln65, label %.loopexit.loopexit, label %.preheader2.preheader" [../C_implementation/lenet5.c:65]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i5 %i_0 to i10" [../C_implementation/lenet5.c:75]   --->   Operation 36 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.36ns)   --->   "%add_ln75 = add i10 %sext_ln75, %zext_ln75_1" [../C_implementation/lenet5.c:75]   --->   Operation 37 'add' 'add_ln75' <Predicate = (!icmp_ln65)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln75 = trunc i10 %add_ln75 to i8" [../C_implementation/lenet5.c:75]   --->   Operation 38 'trunc' 'trunc_ln75' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%p_shl3_cast = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %trunc_ln75, i5 0)" [../C_implementation/lenet5.c:75]   --->   Operation 39 'bitconcatenate' 'p_shl3_cast' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_2 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln75, i2 0)" [../C_implementation/lenet5.c:75]   --->   Operation 40 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln75_1 = sext i12 %tmp_2 to i13" [../C_implementation/lenet5.c:75]   --->   Operation 41 'sext' 'sext_ln75_1' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.53ns)   --->   "%sub_ln75_1 = sub i13 %p_shl3_cast, %sext_ln75_1" [../C_implementation/lenet5.c:75]   --->   Operation 42 'sub' 'sub_ln75_1' <Predicate = (!icmp_ln65)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.46ns)   --->   "br label %.preheader2" [../C_implementation/lenet5.c:66]   --->   Operation 43 'br' <Predicate = (!icmp_ln65)> <Delay = 0.46>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 44 'br' <Predicate = (icmp_ln65)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.02>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%j_0 = phi i5 [ %j, %2 ], [ 0, %.preheader2.preheader ]"   --->   Operation 45 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.97ns)   --->   "%icmp_ln66 = icmp eq i5 %j_0, -4" [../C_implementation/lenet5.c:66]   --->   Operation 46 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28) nounwind"   --->   Operation 47 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (1.02ns)   --->   "%j = add i5 %j_0, 1" [../C_implementation/lenet5.c:66]   --->   Operation 48 'add' 'j' <Predicate = true> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "br i1 %icmp_ln66, label %.preheader3.loopexit, label %.preheader1.preheader" [../C_implementation/lenet5.c:66]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.46ns)   --->   "br label %.preheader1" [../C_implementation/lenet5.c:68]   --->   Operation 50 'br' <Predicate = (!icmp_ln66)> <Delay = 0.46>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "br label %.preheader3"   --->   Operation 51 'br' <Predicate = (icmp_ln66)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 5.45>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ %k, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ]"   --->   Operation 52 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%x_assign = phi i32 [ %res_4, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ]" [../C_implementation/lenet5.c:71]   --->   Operation 53 'phi' 'x_assign' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i3 %k_0 to i5" [../C_implementation/lenet5.c:68]   --->   Operation 54 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.98ns)   --->   "%icmp_ln68 = icmp eq i3 %k_0, -3" [../C_implementation/lenet5.c:68]   --->   Operation 55 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 56 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.76ns)   --->   "%k = add i3 %k_0, 1" [../C_implementation/lenet5.c:68]   --->   Operation 57 'add' 'k' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %icmp_ln68, label %2, label %.preheader.preheader" [../C_implementation/lenet5.c:68]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (1.02ns)   --->   "%add_ln71 = add i5 %i_0, %zext_ln68" [../C_implementation/lenet5.c:71]   --->   Operation 59 'add' 'add_ln71' <Predicate = (!icmp_ln68)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln71_4 = zext i3 %k_0 to i6" [../C_implementation/lenet5.c:71]   --->   Operation 60 'zext' 'zext_ln71_4' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.28ns)   --->   "%add_ln71_3 = add i6 %zext_ln71_4, %add_ln71_2" [../C_implementation/lenet5.c:71]   --->   Operation 61 'add' 'add_ln71_3' <Predicate = (!icmp_ln68)> <Delay = 1.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln71_5 = zext i6 %add_ln71_3 to i8" [../C_implementation/lenet5.c:71]   --->   Operation 62 'zext' 'zext_ln71_5' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%p_shl5_cast = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %add_ln71_3, i2 0)" [../C_implementation/lenet5.c:71]   --->   Operation 63 'bitconcatenate' 'p_shl5_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (1.30ns)   --->   "%add_ln71_4 = add i8 %p_shl5_cast, %zext_ln71_5" [../C_implementation/lenet5.c:71]   --->   Operation 64 'add' 'add_ln71_4' <Predicate = (!icmp_ln68)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.46ns)   --->   "br label %.preheader" [../C_implementation/lenet5.c:69]   --->   Operation 65 'br' <Predicate = (!icmp_ln68)> <Delay = 0.46>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i32 %x_assign to i31" [../C_implementation/lenet5.c:68]   --->   Operation 66 'trunc' 'trunc_ln68' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (1.96ns)   --->   "%icmp_ln13 = icmp sgt i32 %x_assign, 0" [../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75]   --->   Operation 67 'icmp' 'icmp_ln13' <Predicate = (icmp_ln68)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.71ns)   --->   "%return_value = select i1 %icmp_ln13, i31 %trunc_ln68, i31 0" [../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75]   --->   Operation 68 'select' 'return_value' <Predicate = (icmp_ln68)> <Delay = 0.71> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i31 %return_value to i32" [../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75]   --->   Operation 69 'zext' 'zext_ln13' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln75_2 = zext i5 %j_0 to i13" [../C_implementation/lenet5.c:75]   --->   Operation 70 'zext' 'zext_ln75_2' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (1.53ns)   --->   "%add_ln75_1 = add i13 %sub_ln75_1, %zext_ln75_2" [../C_implementation/lenet5.c:75]   --->   Operation 71 'add' 'add_ln75_1' <Predicate = (icmp_ln68)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln75_3 = zext i13 %add_ln75_1 to i64" [../C_implementation/lenet5.c:75]   --->   Operation 72 'zext' 'zext_ln75_3' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [3136 x i32]* %output_r, i64 0, i64 %zext_ln75_3" [../C_implementation/lenet5.c:75]   --->   Operation 73 'getelementptr' 'output_addr' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (2.77ns)   --->   "store i32 %zext_ln13, i32* %output_addr, align 4" [../C_implementation/lenet5.c:75]   --->   Operation 74 'store' <Predicate = (icmp_ln68)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3136> <RAM>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "br label %.preheader2" [../C_implementation/lenet5.c:66]   --->   Operation 75 'br' <Predicate = (icmp_ln68)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.07>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%l_0 = phi i3 [ %l, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 76 'phi' 'l_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%res_4 = phi i32 [ %res, %1 ], [ %x_assign, %.preheader.preheader ]"   --->   Operation 77 'phi' 'res_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln69 = zext i3 %l_0 to i5" [../C_implementation/lenet5.c:69]   --->   Operation 78 'zext' 'zext_ln69' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.98ns)   --->   "%icmp_ln69 = icmp eq i3 %l_0, -3" [../C_implementation/lenet5.c:69]   --->   Operation 79 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 80 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.76ns)   --->   "%l = add i3 %l_0, 1" [../C_implementation/lenet5.c:69]   --->   Operation 81 'add' 'l' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "br i1 %icmp_ln69, label %.preheader1.loopexit, label %1" [../C_implementation/lenet5.c:69]   --->   Operation 82 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.02ns)   --->   "%add_ln71_1 = add i5 %zext_ln69, %j_0" [../C_implementation/lenet5.c:71]   --->   Operation 83 'add' 'add_ln71_1' <Predicate = (!icmp_ln69)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_6 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln71, i5 %add_ln71_1)" [../C_implementation/lenet5.c:71]   --->   Operation 84 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln71_3 = zext i10 %tmp_6 to i64" [../C_implementation/lenet5.c:71]   --->   Operation 85 'zext' 'zext_ln71_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [1024 x i32]* %input_r, i64 0, i64 %zext_ln71_3" [../C_implementation/lenet5.c:71]   --->   Operation 86 'getelementptr' 'input_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 87 [2/2] (2.77ns)   --->   "%input_load = load i32* %input_addr, align 4" [../C_implementation/lenet5.c:71]   --->   Operation 87 'load' 'input_load' <Predicate = (!icmp_ln69)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3136> <RAM>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln71_6 = zext i3 %l_0 to i8" [../C_implementation/lenet5.c:71]   --->   Operation 88 'zext' 'zext_ln71_6' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (1.30ns)   --->   "%add_ln71_5 = add i8 %add_ln71_4, %zext_ln71_6" [../C_implementation/lenet5.c:71]   --->   Operation 89 'add' 'add_ln71_5' <Predicate = (!icmp_ln69)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln71_7 = zext i8 %add_ln71_5 to i64" [../C_implementation/lenet5.c:71]   --->   Operation 90 'zext' 'zext_ln71_7' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [100 x i32]* %kernel, i64 0, i64 %zext_ln71_7" [../C_implementation/lenet5.c:71]   --->   Operation 91 'getelementptr' 'kernel_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 92 [2/2] (2.77ns)   --->   "%kernel_load = load i32* %kernel_addr, align 4" [../C_implementation/lenet5.c:71]   --->   Operation 92 'load' 'kernel_load' <Predicate = (!icmp_ln69)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3136> <RAM>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 93 'br' <Predicate = (icmp_ln69)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 2.77>
ST_7 : Operation 94 [1/2] (2.77ns)   --->   "%input_load = load i32* %input_addr, align 4" [../C_implementation/lenet5.c:71]   --->   Operation 94 'load' 'input_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3136> <RAM>
ST_7 : Operation 95 [1/2] (2.77ns)   --->   "%kernel_load = load i32* %kernel_addr, align 4" [../C_implementation/lenet5.c:71]   --->   Operation 95 'load' 'kernel_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3136> <RAM>

State 8 <SV = 7> <Delay = 7.05>
ST_8 : Operation 96 [1/1] (7.05ns)   --->   "%mul_ln71 = mul nsw i32 %kernel_load, %input_load" [../C_implementation/lenet5.c:71]   --->   Operation 96 'mul' 'mul_ln71' <Predicate = true> <Delay = 7.05> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.05> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.89>
ST_9 : Operation 97 [1/1] (1.89ns)   --->   "%res = add nsw i32 %res_4, %mul_ln71" [../C_implementation/lenet5.c:71]   --->   Operation 97 'add' 'res' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "br label %.preheader" [../C_implementation/lenet5.c:69]   --->   Operation 98 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('nb_filtre') with incoming values : ('nb_filtre', ../C_implementation/lenet5.c:64) [10]  (0.466 ns)

 <State 2>: 1.31ns
The critical path consists of the following:
	'phi' operation ('nb_filtre') with incoming values : ('nb_filtre', ../C_implementation/lenet5.c:64) [10]  (0 ns)
	'sub' operation ('sub_ln75', ../C_implementation/lenet5.c:75) [23]  (1.31 ns)

 <State 3>: 2.9ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ../C_implementation/lenet5.c:65) [27]  (0 ns)
	'add' operation ('add_ln75', ../C_implementation/lenet5.c:75) [34]  (1.36 ns)
	'sub' operation ('sub_ln75_1', ../C_implementation/lenet5.c:75) [39]  (1.54 ns)

 <State 4>: 1.02ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ../C_implementation/lenet5.c:66) [42]  (0 ns)
	'add' operation ('j', ../C_implementation/lenet5.c:66) [45]  (1.02 ns)

 <State 5>: 5.45ns
The critical path consists of the following:
	'phi' operation ('x', ../C_implementation/lenet5.c:71) with incoming values : ('res', ../C_implementation/lenet5.c:71) [51]  (0 ns)
	'icmp' operation ('icmp_ln13', ../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75) [91]  (1.97 ns)
	'select' operation ('x', ../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75) [92]  (0.716 ns)
	'store' operation ('store_ln75', ../C_implementation/lenet5.c:75) of variable 'zext_ln13', ../C_implementation/lenet5.c:13->../C_implementation/lenet5.c:75 on array 'output_r' [98]  (2.77 ns)

 <State 6>: 4.08ns
The critical path consists of the following:
	'phi' operation ('l') with incoming values : ('l', ../C_implementation/lenet5.c:69) [66]  (0 ns)
	'add' operation ('add_ln71_5', ../C_implementation/lenet5.c:71) [80]  (1.31 ns)
	'getelementptr' operation ('kernel_addr', ../C_implementation/lenet5.c:71) [82]  (0 ns)
	'load' operation ('kernel_load', ../C_implementation/lenet5.c:71) on array 'kernel' [83]  (2.77 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'load' operation ('input_load', ../C_implementation/lenet5.c:71) on array 'input_r' [78]  (2.77 ns)

 <State 8>: 7.05ns
The critical path consists of the following:
	'mul' operation ('mul_ln71', ../C_implementation/lenet5.c:71) [84]  (7.05 ns)

 <State 9>: 1.9ns
The critical path consists of the following:
	'add' operation ('res', ../C_implementation/lenet5.c:71) [85]  (1.9 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
